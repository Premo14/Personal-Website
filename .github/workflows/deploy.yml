name: Deploy to AWS

on:
  push:
    branches:
      - master

env:
  AWS_REGION: us-east-1
  BACKEND_IMAGE: backend
  FRONTEND_IMAGE: frontend
  ECR_REPOSITORY: personal-website
  ACCOUNT_ID: 739275461129
  ECR_REGISTRY: 739275461129.dkr.ecr.us-east-1.amazonaws.com

jobs:
  build-and-push:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Login to Amazon ECR
        id: ecr-login
        run: |
          aws ecr get-login-password --region ${{ env.AWS_REGION }} | docker login --username AWS --password-stdin ${{ env.ECR_REGISTRY }}

      - name: Create ECR repositories if not exist
        run: |
          aws ecr describe-repositories --repository-names ${{ env.ECR_REPOSITORY }}-backend || aws ecr create-repository --repository-name ${{ env.ECR_REPOSITORY }}-backend
          aws ecr describe-repositories --repository-names ${{ env.ECR_REPOSITORY }}-frontend || aws ecr create-repository --repository-name ${{ env.ECR_REPOSITORY }}-frontend

      # Backend
      - name: Build Backend Image
        run: |
          docker build --target production -t ${{ env.BACKEND_IMAGE }} ./backend
          docker tag ${{ env.BACKEND_IMAGE }}:latest ${{ env.ECR_REGISTRY }}/${{ env.ECR_REPOSITORY }}-backend:latest

      - name: Push Backend Image
        run: |
          docker push ${{ env.ECR_REGISTRY }}/${{ env.ECR_REPOSITORY }}-backend:latest

      # Frontend
      - name: Build Frontend Image
        run: |
          docker build --target production \
            --build-arg VITE_BACKEND_PORT=${{ secrets }} \
            --build-arg VITE_PORT=80 \
            --build-arg VITE_BUILD_STAGE=production \
            --build-arg VITE_HOST=https://premsanity.com \
            --build-arg VITE_UPLOAD_PASSCODE=${{ secrets.VITE_UPLOAD_CODE }} \
            -t ${{ env.FRONTEND_IMAGE }} ./react
          docker tag ${{ env.FRONTEND_IMAGE }}:latest ${{ env.ECR_REGISTRY }}/${{ env.ECR_REPOSITORY }}-frontend:latest

      - name: Push Frontend Image
        run: |
          docker push ${{ env.ECR_REGISTRY }}/${{ env.ECR_REPOSITORY }}-frontend:latest
